{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spada\\\\Dropbox\\\\Il mio PC (LAPTOP-E4FFUI9B)\\\\Desktop\\\\visual studio\\\\git\\\\corso-front-end-developer\\\\SETTIMANA 10\\\\GIORNO1\\\\src\\\\components\\\\CompanySearchResults.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Job from \"./Job\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setCompanyJobs } from \"../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanySearchResults = _ref => {\n  _s();\n\n  let {\n    companyJobs,\n    setCompanyJobs\n  } = _ref;\n  const [jobs, setJobs] = useState(companyJobs);\n  const params = useParams();\n  const baseEndpoint = \"https://strive-benchmark.herokuapp.com/api/jobs?company=\";\n  useEffect(() => {\n    getJobs(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params.company]); // Aggiungi params.company come dipendenza dell'effetto\n\n  const getJobs = async () => {\n    try {\n      const response = await fetch(baseEndpoint + params.company);\n\n      if (response.ok) {\n        const {\n          data\n        } = await response.json();\n        setJobs(data); // Aggiorna lo stato Redux utilizzando l'azione setCompanyJobs\n\n        setCompanyJobs(data);\n      } else {\n        alert(\"Error fetching results\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-4\",\n          children: [\"Job posting for: \", params.company]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), jobs.map(jobData => /*#__PURE__*/_jsxDEV(Job, {\n          data: jobData\n        }, jobData._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompanySearchResults, \"N2QyrCNAsaUU9aIXIC9rhBciQ4s=\", false, function () {\n  return [useParams];\n});\n\n_c = CompanySearchResults;\n\nconst mapStateToProps = state => ({\n  companyJobs: state.companyJobs\n});\n\nconst mapDispatchToProps = {\n  setCompanyJobs\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanySearchResults);\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanySearchResults\");","map":{"version":3,"names":["React","useEffect","useState","Container","Row","Col","Job","useParams","connect","setCompanyJobs","CompanySearchResults","companyJobs","jobs","setJobs","params","baseEndpoint","getJobs","company","response","fetch","ok","data","json","alert","error","console","log","map","jobData","_id","mapStateToProps","state","mapDispatchToProps"],"sources":["C:/Users/spada/Dropbox/Il mio PC (LAPTOP-E4FFUI9B)/Desktop/visual studio/git/corso-front-end-developer/SETTIMANA 10/GIORNO1/src/components/CompanySearchResults.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Job from \"./Job\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setCompanyJobs } from \"../store/actions\";\n\nconst CompanySearchResults = ({ companyJobs, setCompanyJobs }) => {\n  const [jobs, setJobs] = useState(companyJobs);\n  const params = useParams();\n\n  const baseEndpoint = \"https://strive-benchmark.herokuapp.com/api/jobs?company=\";\n\n  useEffect(() => {\n    getJobs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params.company]); // Aggiungi params.company come dipendenza dell'effetto\n\n  const getJobs = async () => {\n    try {\n      const response = await fetch(baseEndpoint + params.company);\n      if (response.ok) {\n        const { data } = await response.json();\n        setJobs(data);\n        // Aggiorna lo stato Redux utilizzando l'azione setCompanyJobs\n        setCompanyJobs(data);\n      } else {\n        alert(\"Error fetching results\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col className=\"my-3\">\n          <h1 className=\"display-4\">Job posting for: {params.company}</h1>\n          {jobs.map((jobData) => (\n            <Job key={jobData._id} data={jobData} />\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  companyJobs: state.companyJobs,\n});\n\nconst mapDispatchToProps = {\n  setCompanyJobs,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanySearchResults);\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;;AAEA,MAAMC,oBAAoB,GAAG,QAAqC;EAAA;;EAAA,IAApC;IAAEC,WAAF;IAAeF;EAAf,CAAoC;EAChE,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACS,WAAD,CAAhC;EACA,MAAMG,MAAM,GAAGP,SAAS,EAAxB;EAEA,MAAMQ,YAAY,GAAG,0DAArB;EAEAd,SAAS,CAAC,MAAM;IACde,OAAO,GADO,CAEd;EACD,CAHQ,EAGN,CAACF,MAAM,CAACG,OAAR,CAHM,CAAT,CANgE,CAS1C;;EAEtB,MAAMD,OAAO,GAAG,YAAY;IAC1B,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACJ,YAAY,GAAGD,MAAM,CAACG,OAAvB,CAA5B;;MACA,IAAIC,QAAQ,CAACE,EAAb,EAAiB;QACf,MAAM;UAAEC;QAAF,IAAW,MAAMH,QAAQ,CAACI,IAAT,EAAvB;QACAT,OAAO,CAACQ,IAAD,CAAP,CAFe,CAGf;;QACAZ,cAAc,CAACY,IAAD,CAAd;MACD,CALD,MAKO;QACLE,KAAK,CAAC,wBAAD,CAAL;MACD;IACF,CAVD,CAUE,OAAOC,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD;EACF,CAdD;;EAgBA,oBACE,QAAC,SAAD;IAAA,uBACE,QAAC,GAAD;MAAA,uBACE,QAAC,GAAD;QAAK,SAAS,EAAC,MAAf;QAAA,wBACE;UAAI,SAAS,EAAC,WAAd;UAAA,gCAA4CV,MAAM,CAACG,OAAnD;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAEGL,IAAI,CAACe,GAAL,CAAUC,OAAD,iBACR,QAAC,GAAD;UAAuB,IAAI,EAAEA;QAA7B,GAAUA,OAAO,CAACC,GAAlB;UAAA;UAAA;UAAA;QAAA,QADD,CAFH;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAvCD;;GAAMnB,oB;UAEWH,S;;;KAFXG,oB;;AAyCN,MAAMoB,eAAe,GAAIC,KAAD,KAAY;EAClCpB,WAAW,EAAEoB,KAAK,CAACpB;AADe,CAAZ,CAAxB;;AAIA,MAAMqB,kBAAkB,GAAG;EACzBvB;AADyB,CAA3B;AAIA,eAAeD,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtB,oBAA7C,CAAf"},"metadata":{},"sourceType":"module"}